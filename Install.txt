Hyperledger Fabric installation guide

1. Install Git: Install the latest version of Git with the command below.
sudo apt-get install git

2. Install cURL: Install the latest version of cURL with the command below.
sudo apt-get install curl

3. Install wget: Install the latest version of wget with the command below. It will be needed for downloading Fabric binaries.
sudo apt-get install wget

4. Install Docker and Docker Compose: Install the latest version of docker with the command below. Then you add your current user in docker group.
sudo apt-get -y install docker-compose
sudo usermod -aG docker ${USER}
===> logout and login are needed after adding docker group, check everything is ok with the command below
id -nG

5. Install Go
wget https://golang.org/dl/go1.14.2.linux-amd64.tar.gz
sudo tar -xvf go1.14.2.linux-amd64.tar.gzsudo chown -R root:root ./go
sudo mv go /usr/local

sudo gedit $HOME/.profile
export PATH=$PATH:/usr/local/go/bin

6. Install Node.js & NPM
curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
sudo apt-get install nodejs

7. Install Python: Install version 2.7 of Python with the commands below. Also, the appropriate version is installing with node.js installation.
sudo apt-get install python
Download hyperledger fabric sample & test network
curl -sSL https://bit.ly/2ysbOFE | bash -s

8. Bring up the test network
cd fabric-samples/test-network

./network.sh down
./network.sh up

8.1 View the components of the test network
docker ps -a

9. Creating a channel
./network.sh createChannel

10. Starting a chaincode on the channel
./network.sh deployCC

11. Interacting with the network
export PATH=${PWD}/../bin:$PATH
export FABRIC_CFG_PATH=$PWD/../config/
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=localhost:7051

12. Run the following command to initialize the ledger with assets:
peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"function":"InitLedger","Args":[]}'

13. You can now query the ledger. Run the following command to get the list of assets that were added to your channel ledger:
peer chaincode query -C mychannel -n basic -c '{"Args":["GetAllAssets"]}'


Acknowledgement: This guide is derived from many sources in the Internet, including but not limited to:
- https://medium.com/coinmonks/hyperledger-fabric-v2-1-installation-guide-prerequisites-bring-up-the-test-network-4ac658b0df64

